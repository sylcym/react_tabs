{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","selectedTabContent","content","className","map","href","onClick","handleTabSelect","title","App","useState","setSelectedTabId","selectedTitle","ReactDOM","render","document","getElementById"],"mappings":"iMASaA,EAA4B,SAAC,GAInC,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAQMC,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAEnEO,EAAkB,UAAGP,EACxBI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,YADJ,aAAG,EACiBO,QAE5C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAL,GAAG,OACX,oBAEEI,WAAsB,OAAXN,QAAW,IAAXA,OAAA,EAAAA,EAAaG,MAAOD,EAAIC,GAC/B,YACA,GACJ,UAAQ,MALV,SAOE,mBACEK,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBA1BC,SAACP,GACnBA,EAAIC,KAAOL,GACbC,EAAcG,GAwBWQ,CAAgBR,IAHjC,SAKGA,EAAIS,SAXFT,EAAIC,WAkBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,QC1CIP,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASN,QAAS,eACxC,CAAEF,GAAI,QAASQ,MAAO,QAASN,QAAS,eACxC,CAAEF,GAAI,QAASQ,MAAO,QAASN,QAAS,gBAG7BO,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAEMC,EAAa,UAAGlB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAA/B,aAAG,EAA4Ca,MAMlE,OACE,sBAAKL,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,KAGtB,cAAC,EAAD,CACElB,KAAMA,EACNC,cAAeA,EACfC,cAbgB,WAAyB,IAAxBG,EAAuB,uDAAZL,EAAK,GACrCiB,EAAiBZ,EAAIC,WCjBzBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0a43f50e.chunk.js","sourcesContent":["import React from 'react';\nimport { Tab } from '../../types/Tab';\n\ninterface TabsProps {\n  tabs: Tab[];\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleTabSelect = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  const selectedTabContent = tabs\n    .find((tab) => tab.id === selectedTabId)?.content;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={selectedTab?.id === tab.id\n                ? 'is-active'\n                : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabSelect(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTitle = tabs.find(tab => tab.id === selectedTabId)?.title;\n\n  const onTabSelected = (tab: Tab = tabs[0]) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}